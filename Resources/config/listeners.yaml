services:
  # конфигурация по умолчанию в *этом* файле
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  Symfony\Component\ExpressionLanguage\ExpressionLanguage: ~

  custom_request_responser.set.headers:
    class: Prokl\CustomRequestResponserBundle\Event\Listeners\SetHeaders
    arguments: ['@Symfony\Component\ExpressionLanguage\ExpressionLanguage', '%custom_request_responser%']
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: handle, priority: 10 }
      - { name: custom_request_responser.handler, priority: 10 }

  Prokl\CustomRequestResponserBundle\Event\Listeners\SetHeaders: '@custom_request_responser.set.headers'

  # Минификация Response для типа txt/html.
  custom_request_responser.compress_response:
    class: Prokl\CustomRequestResponserBundle\Event\Listeners\CompressHtmlResponse
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: handle, priority: 10 }
      - { name: custom_request_responser.handler, priority: 10 }

  # Управление индексацией роута.
  custom_request_responser.robots:
    class: Prokl\CustomRequestResponserBundle\Event\Listeners\Robots
    calls:
      - setContainer: ['@service_container']
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: handle, priority: 10 }
      - { name: custom_request_responser.handler, priority: 10 }

  # Запуск пачки middlewares PageSpeed.
  custom_request_responser.pagespeed_middlewares:
    class: Prokl\CustomRequestResponserBundle\Event\Listeners\PageSpeedMiddlewares
    arguments:
      - '@service_container'
      - '%custom_request_responser%'
      - 'middlewares_disabled'
      - !tagged_iterator response.middleware
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: handle, priority: 10 }

  # Логгирование Request & Response.
  custom_request_responser.logger_response:
    class: Prokl\CustomRequestResponserBundle\Event\Listeners\LogResponse
    arguments:
      - '@logger'
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: handle, priority: 999 }
